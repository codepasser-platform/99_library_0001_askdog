logging:
  level:
    org.springframework.security: DEBUG
    org.springframework.web.socket: DEBUG

server:
  port: 8280

spring:
  redis:
    host: 192.168.99.100
    port: 6379
  data:
    mongodb:
      host: 192.168.99.100
      database: ask-dog
  datasource:
    #platform: postgresql
    driver-class-name: org.postgresql.Driver
    url: jdbc:postgresql://192.168.99.100:5432/ask.dog
    username: service.dog
    password: service.dog@BwUbMQh401
  jpa:
    generate-ddl: true
    show-sql: true
    hibernate:
      ddl-auto: create-drop
  mail:
    host: smtp.exmail.qq.com
    port: 25
    username: test@hooying.com
    password: Dev2016
  freemarker:
    template-loader-path: classpath:/templates/view/

askdog:
  base-url: http://192.168.99.100:8280
  mail:
    registration:
      url: ${askdog.base-url}/register.php?status=validate_email
      token-timeout: 1
      token-timeout-unit: DAYS
      user-name: test@hooying.com
      password: Dev2016
      retry-count: 3
    password:
      url: ${askdog.base-url}/login.php?status=change_password
      token-timeout: 30
      token-timeout-unit: MINUTES
      user-name: test@hooying.com
      password: Dev2016
      retry-count: 3
    notification:
      url: ${askdog.base-url}/question.php
      user-name: test@hooying.com
      password: Dev2016
      retry-count: 3
  web:
    apach-urls:
      # this chrome extension is PostMan, we using this for test RESTful APIs
      - chrome-extension://fhbjgbiflinjbdggehcddcbncdddomop
    user:
      default-avatar: ${askdog.base-url}/image/avator.png
    question:
      detail-url: ${askdog.base-url}/question.php?id={questionId}
      qr-code:
        width: 200
        height: 200
        format: png
  cache:
    expires:
      cache:cell:answer:detail: 60
      cache:cell:question:detail: 61
  storage:
    picture:
      answer:
        endpoint: oss-cn-hangzhou.aliyuncs.com
        access-id: mEFBShFTJwtTLFyT
        access-key: Kk8kV2Rx340wuKpAzH8cgyEKIczQex
        bucket: ad-dev
        policy:
          expire-time: 60 * 5 #s
          max-size: 1024 * 5 #k
          base-dir: answer
        callback:
          url: askcafe.ngrok.cc/api/storage/callback
          host: askcafe.ngrok.cc
          body: '{"bucket":${bucket},"object":${object},"mimeType":${mimeType},"size":${size},"linkId":"${linkId}"}'
          body-type: application/json
      avatar:
        endpoint: oss-cn-hangzhou.aliyuncs.com
        access-id: mEFBShFTJwtTLFyT
        access-key: Kk8kV2Rx340wuKpAzH8cgyEKIczQex
        bucket: ad-dev
        policy:
          expire-time: 60 * 5 #s
          max-size: 1024 * 10 #k
          base-dir: avatar
        callback:
          url: askcafe.ngrok.cc/api/storage/callback
          host: askcafe.ngrok.cc
          body: '{"bucket":${bucket},"object":${object},"mimeType":${mimeType},"size":${size},"linkId":"${linkId}"}'
          body-type: application/json
      question:
        endpoint: oss-cn-hangzhou.aliyuncs.com
        access-id: mEFBShFTJwtTLFyT
        access-key: Kk8kV2Rx340wuKpAzH8cgyEKIczQex
        bucket: ad-dev
        policy:
          base-dir: question
  location:
    key: EIGBZ-WMIWF-M4TJ7-NPBLX-TO4SS-GHB3U
    base-url: http://apis.map.qq.com
    ip-location: '${askdog.location.base-url}/ws/location/v1/ip?ip={ip}&key=${askdog.location.key}&output=json'
    geo-location: '${askdog.location.base-url}/ws/geocoder/v1/?location={lat},{lng}&key=${askdog.location.key}&get_poi={poi}&coord_type=5&output=json'
    nearby-distance: 50 #kilometers
    nearby-limit: 1000
    rencent-limit: 100
    rate-distance: 50 #kilometers
  elasticsearch:
    settings:
      cluster.name: ask.dog
    hosts:
      - address: 192.168.99.100
        port: 9300

github:
  client:
    id: GITHUB
    clientId: 09da135fbbbb10ef03a4
    clientSecret: 40932119d78824941f03b16c76db039059b940a8
    accessTokenUri: https://github.com/login/oauth/access_token
    userAuthorizationUri: https://github.com/login/oauth/authorize
    clientAuthenticationScheme: form
    authenticationScheme: form
  resource:
    userInfoUri: https://api.github.com/user
  definition:
    id: id
    nickname: login
    avatar: avatar_url

weibo:
  client:
    id: WEIBO
    clientId: 2441264820
    clientSecret: 49da0c6d565a965d732fd2935745c2dd
    accessTokenUri: https://api.weibo.com/oauth2/access_token
    userAuthorizationUri: https://api.weibo.com/oauth2/authorize
    clientAuthenticationScheme: form
    authenticationScheme: form
  resource:
    userIdUri: https://api.weibo.com/2/account/get_uid.json
    userInfoUri: https://api.weibo.com/2/users/show.json?uid=%s
  definition:
    id: uid
    nickname: screen_name
    avatar: avatar_large

qq:
  client:
    id: QQ
    clientId: 101300041
    clientSecret: 322072366aa19e52ab14b4011fea62b5
    accessTokenUri: https://graph.qq.com/oauth2.0/token
    userAuthorizationUri: https://graph.qq.com/oauth2.0/authorize
    clientAuthenticationScheme: form
    authenticationScheme: form
  resource:
    userIdUri: https://graph.qq.com/oauth2.0/me
    userInfoUri: https://graph.qq.com/user/get_user_info?openid=%s&oauth_consumer_key=%s
  definition:
    id: openid
    nickname: nickname
    avatar: figureurl_qq_1